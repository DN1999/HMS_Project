/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hmsys.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author राधे~राधे !
 */
public class AvailableRoom extends javax.swing.JFrame {

  Connection con;
  Statement st;
  ResultSet rs;
  String cid="";
   /**
     * Creates new form AvailableRoom
     */
    public AvailableRoom() {
        initComponents();
      connect();
      fetchid();
    }
public void connect()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            con= DriverManager.getConnection("jdbc:mysql://localhost:3306/hmsys","root","");
            st = con.createStatement();
        }
        catch(Exception e)
        {
         JOptionPane.showMessageDialog(this,""+e);
        }
    }
    public void fetchid(){
     try
        { 
//            String rType=jComboBox1.getSelectedItem().toString();
//            String rstatus=jComboBox2.getSelectedItem().toString();
            ResultSet   rs=st.executeQuery("select * from room");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
           {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus")
            });
           } 
           }  catch(Exception e)
                {
                      JOptionPane.showMessageDialog(this,e);
                }
    }

    public void fetchType(){
     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Available Room Details Page");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 0, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Available Room Details");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 5, true));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 80));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setText("Room Status");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, 120, 30));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1Bed Non-AC", "1Bed AC-Room", "2Bed Non-AC", "2Bed AC-Room", "4Bed Non-AC", "4Bed AC Room" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 170, 30));

        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room ID", "Room Number", "Room Type", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 660, 240));

        jButton6.setBackground(new java.awt.Color(255, 153, 102));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 255));
        jButton6.setText("<<");
        jButton6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 50, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setText("Room Type");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, 30));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Available", "Reserved" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, 170, 30));

        jLabel2.setBackground(new java.awt.Color(102, 255, 102));
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 12, 12, 12, new java.awt.Color(255, 0, 0)));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 810, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        new HomePage().show();
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
//    Code for search data for Room Type 
      String rType=jComboBox1.getSelectedItem().toString();
      String rstatus=jComboBox2.getSelectedItem().toString();
      try
        {             
       if(rType.equals("Select")&&rstatus.equals("Select"))
        {
            ResultSet   rs=st.executeQuery("select * from room ");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
            {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
            }
        }else if(!rType.equals("Select")&&rstatus.equals("Select"))
        {
            ResultSet   rs=st.executeQuery("select * from room where rtype='"+rType+"'");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
            {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
            }
        }else if(rType.equals("Select")&&!rstatus.equals("Select"))
        {
            ResultSet   rs=st.executeQuery("select * from room where rstatus='"+rstatus+"'");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
            {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
            }
        }else{
            ResultSet   rs=st.executeQuery("select * from room where rstatus='"+rstatus+"' and rtype='"+rType+"' ");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
           {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
           } 
           }
        }  catch(Exception e)
                {
                      JOptionPane.showMessageDialog(this,e);
                }
     
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // Code for Room Status 
       String rType=jComboBox1.getSelectedItem().toString();
       String rstatus=jComboBox2.getSelectedItem().toString();
     try
        { 
        if(rType.equals("Select")&&rstatus.equals("Select"))
        {
            ResultSet   rs=st.executeQuery("select * from room ");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
            {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
            }
        }else if(rType.equals("Select")&&rstatus.equals("Available"))
        {
            ResultSet   rs=st.executeQuery("select * from room where rstatus='"+rstatus+"'");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
            {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
            }
        }else if(rType.equals("Select")&&rstatus.equals("Reserved"))
        {
            ResultSet   rs=st.executeQuery("select * from room where rstatus='"+rstatus+"'");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
            {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
            }
        }else if(!rType.equals("Select")&&rstatus.equals("Select"))
        {
            ResultSet   rs=st.executeQuery("select * from room where rtype='"+rType+"'");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
            {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
            }
        }else{
            ResultSet   rs=st.executeQuery("select * from room where rstatus='"+rstatus+"' and rtype='"+rType+"' ");
            DefaultTableModel m1 = (DefaultTableModel) jTable1.getModel();
            m1.setRowCount(0);
            while(rs.next())
           {
            m1.addRow(new Object[] 
            {
                rs.getString("rid"),rs.getString("rnum"),rs.getString("rtype"),rs.getString("rstatus"),
            });
           } 
          }  
        }catch(Exception e)
                {
                      JOptionPane.showMessageDialog(this,e);
                }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AvailableRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
